<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.antlr</groupId>
  <artifactId>antlr-runtime</artifactId>
  <packaging>jar</packaging>
  
  <!--

    Inherit from the ANTLR master pom, which tells us what
    version we are and allows us to inherit dependencies
    and so on.

    -->
  <parent>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-master</artifactId>
      <version>3.1.3</version>
  </parent>
  
  <name>Antlr 3 Runtime</name>
  <description>A framework for constructing recognizers, compilers, and translators from grammatical descriptions containing Java, C#, C++, or Python actions.</description>
  <url>http://www.antlr.org</url>
      <developers>
        <developer>
            <name>Terence Parr</name>
            <organization>USFCA</organization>
            <organizationUrl>http://www.cs.usfca.edu</organizationUrl>
            <email>parrt@antlr.org</email>
            <roles>
                <role>Project Leader</role>
                <role>Developer - Java Target</role>
            </roles>
            <timezone>PST</timezone>
        </developer>
        <developer>
            <name>Jim Idle</name>
            <organization>Temporal Wave LLC</organization>
            <organizationUrl>http://www.temporal-wave.com</organizationUrl>
            <email>jimi@temporal-wave.com</email>
            <roles>
                <role>Developer - Maven stuff</role>
                <role>Developer - C Target</role>
            </roles>
            <timezone>PST</timezone>
        </developer>
    </developers>
    
  <scm>
    <url>http://fisheye2.cenqua.com/browse/antlr</url>
    <connection>http://fisheye2.cenqua.com/browse/antlr</connection>
  </scm>
  
  <!--
    Definition of the ANTLR repositories. Note that you can only deploy
    to the repositories via scp, and so the server must already know about
    your public key. ONly ANTLR developers are allowed to deploy to the 
    release and snapshot repositories, which are synced with the Maven central
    repository.
  -->
  <distributionManagement>

      <repository>
          <id>antlr-repo</id>
          <name>ANTLR Testing repository</name>
          <url>scpexe://antlr.org/home/mavensync/antlr-repo</url>
      </repository>
      
      <snapshotRepository>
            <id>antlr-snapshot</id>
            <name>ANTLR Testing Snapshot Repository</name>
            <url>scpexe://antlr.org/home/mavensync/antlr-snapshot</url>
      </snapshotRepository>

  </distributionManagement>

  <dependencies>
    
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>stringtemplate</artifactId>
      <version>3.2</version>
      <scope>compile</scope>
    </dependency>
    
  </dependencies>
  
<build>
    <defaultGoal>install</defaultGoal>
    <extensions>
        <extension>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-ssh-external</artifactId>
            <version>1.0-beta-2</version>
        </extension>
    </extensions>
    <plugins>
        <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.0.2</version>
            <configuration>
                <source>1.5</source>
                <target>1.5</target>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <configuration>
                <findbugsXmlOutput>true</findbugsXmlOutput>
                <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
                <xmlOutput>true</xmlOutput>
            </configuration>
        </plugin>
    </plugins>
</build>

</project>
